/*
Player Authentication Admin API

# Introduction This is the Admin API specification for the Unity Authentication service that allows player authentication. To use this API, you must first enable it through the Unity Gaming Services dashboard.  For more information about how to set up Service Account Authentication, please read here: https://services.docs.unity.com/docs/service-account-auth  ## Rate Limits The API has rate limiting in place. Request are limited to 10 requests per second, and 500 requests per 30 minute period.  The API responds with a `429` HTTP status code if the rate limit is exceeded.  It will also respond with a `Retry-After` header to be used in conjunction with a client's retry logic. The value is the number of seconds until a request for the given player will be accepted. 

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unityauth

import (
	"encoding/json"
)

// checks if the PlayerAuthListProjectUserResponseUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlayerAuthListProjectUserResponseUser{}

// PlayerAuthListProjectUserResponseUser Represents a requested player.
type PlayerAuthListProjectUserResponseUser struct {
	// The player Id. The Id is unique within the Id domain.
	Id *string `json:"id,omitempty"`
	// Whether the player is enabled or disabled by admin.
	Disabled *bool `json:"disabled,omitempty"`
	// List of externalIds that have been linked to the player.
	ExternalIds []PlayerAuthListProjectUserResponseExternalId `json:"externalIds,omitempty"`
	// When the player was created at. It is a unix timestamp.
	CreatedAt *string `json:"createdAt,omitempty"`
	// When the player last logged in. It is a unix timestamp.
	LastLoginAt *string `json:"lastLoginAt,omitempty"`
}

// NewPlayerAuthListProjectUserResponseUser instantiates a new PlayerAuthListProjectUserResponseUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlayerAuthListProjectUserResponseUser() *PlayerAuthListProjectUserResponseUser {
	this := PlayerAuthListProjectUserResponseUser{}
	return &this
}

// NewPlayerAuthListProjectUserResponseUserWithDefaults instantiates a new PlayerAuthListProjectUserResponseUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlayerAuthListProjectUserResponseUserWithDefaults() *PlayerAuthListProjectUserResponseUser {
	this := PlayerAuthListProjectUserResponseUser{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PlayerAuthListProjectUserResponseUser) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerAuthListProjectUserResponseUser) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PlayerAuthListProjectUserResponseUser) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PlayerAuthListProjectUserResponseUser) SetId(v string) {
	o.Id = &v
}

// GetDisabled returns the Disabled field value if set, zero value otherwise.
func (o *PlayerAuthListProjectUserResponseUser) GetDisabled() bool {
	if o == nil || IsNil(o.Disabled) {
		var ret bool
		return ret
	}
	return *o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerAuthListProjectUserResponseUser) GetDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Disabled) {
		return nil, false
	}
	return o.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (o *PlayerAuthListProjectUserResponseUser) HasDisabled() bool {
	if o != nil && !IsNil(o.Disabled) {
		return true
	}

	return false
}

// SetDisabled gets a reference to the given bool and assigns it to the Disabled field.
func (o *PlayerAuthListProjectUserResponseUser) SetDisabled(v bool) {
	o.Disabled = &v
}

// GetExternalIds returns the ExternalIds field value if set, zero value otherwise.
func (o *PlayerAuthListProjectUserResponseUser) GetExternalIds() []PlayerAuthListProjectUserResponseExternalId {
	if o == nil || IsNil(o.ExternalIds) {
		var ret []PlayerAuthListProjectUserResponseExternalId
		return ret
	}
	return o.ExternalIds
}

// GetExternalIdsOk returns a tuple with the ExternalIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerAuthListProjectUserResponseUser) GetExternalIdsOk() ([]PlayerAuthListProjectUserResponseExternalId, bool) {
	if o == nil || IsNil(o.ExternalIds) {
		return nil, false
	}
	return o.ExternalIds, true
}

// HasExternalIds returns a boolean if a field has been set.
func (o *PlayerAuthListProjectUserResponseUser) HasExternalIds() bool {
	if o != nil && !IsNil(o.ExternalIds) {
		return true
	}

	return false
}

// SetExternalIds gets a reference to the given []PlayerAuthListProjectUserResponseExternalId and assigns it to the ExternalIds field.
func (o *PlayerAuthListProjectUserResponseUser) SetExternalIds(v []PlayerAuthListProjectUserResponseExternalId) {
	o.ExternalIds = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PlayerAuthListProjectUserResponseUser) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerAuthListProjectUserResponseUser) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PlayerAuthListProjectUserResponseUser) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *PlayerAuthListProjectUserResponseUser) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetLastLoginAt returns the LastLoginAt field value if set, zero value otherwise.
func (o *PlayerAuthListProjectUserResponseUser) GetLastLoginAt() string {
	if o == nil || IsNil(o.LastLoginAt) {
		var ret string
		return ret
	}
	return *o.LastLoginAt
}

// GetLastLoginAtOk returns a tuple with the LastLoginAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerAuthListProjectUserResponseUser) GetLastLoginAtOk() (*string, bool) {
	if o == nil || IsNil(o.LastLoginAt) {
		return nil, false
	}
	return o.LastLoginAt, true
}

// HasLastLoginAt returns a boolean if a field has been set.
func (o *PlayerAuthListProjectUserResponseUser) HasLastLoginAt() bool {
	if o != nil && !IsNil(o.LastLoginAt) {
		return true
	}

	return false
}

// SetLastLoginAt gets a reference to the given string and assigns it to the LastLoginAt field.
func (o *PlayerAuthListProjectUserResponseUser) SetLastLoginAt(v string) {
	o.LastLoginAt = &v
}

func (o PlayerAuthListProjectUserResponseUser) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlayerAuthListProjectUserResponseUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Disabled) {
		toSerialize["disabled"] = o.Disabled
	}
	if !IsNil(o.ExternalIds) {
		toSerialize["externalIds"] = o.ExternalIds
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.LastLoginAt) {
		toSerialize["lastLoginAt"] = o.LastLoginAt
	}
	return toSerialize, nil
}

type NullablePlayerAuthListProjectUserResponseUser struct {
	value *PlayerAuthListProjectUserResponseUser
	isSet bool
}

func (v NullablePlayerAuthListProjectUserResponseUser) Get() *PlayerAuthListProjectUserResponseUser {
	return v.value
}

func (v *NullablePlayerAuthListProjectUserResponseUser) Set(val *PlayerAuthListProjectUserResponseUser) {
	v.value = val
	v.isSet = true
}

func (v NullablePlayerAuthListProjectUserResponseUser) IsSet() bool {
	return v.isSet
}

func (v *NullablePlayerAuthListProjectUserResponseUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlayerAuthListProjectUserResponseUser(val *PlayerAuthListProjectUserResponseUser) *NullablePlayerAuthListProjectUserResponseUser {
	return &NullablePlayerAuthListProjectUserResponseUser{value: val, isSet: true}
}

func (v NullablePlayerAuthListProjectUserResponseUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlayerAuthListProjectUserResponseUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


