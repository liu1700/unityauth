/*
Player Authentication API

# Introduction This is the API specification for the Unity Authentication service that allows player authentication.  ## Rate Limits The API has rate limiting in place. The endpoints are limited to 15 requests per second on a per-IP basis, and 300 requests over 30 minutes. The API responds with a `429` HTTP status code if the rate limit is exceeded. It will also respond with a `Retry-After` header to be used in conjunction with a client's retry logic. The value is the number of seconds until a request for the given player will be accepted. 

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unityauth

import (
	"encoding/json"
)

// checks if the CodeLinkConfirmationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CodeLinkConfirmationRequest{}

// CodeLinkConfirmationRequest Request for confirming the code linking.
type CodeLinkConfirmationRequest struct {
	// The code returned in the GenerateCodeResponse.
	SignInCode *string `json:"signInCode,omitempty"`
	// The authenticated device session token, for added security.
	SessionToken *string `json:"sessionToken,omitempty"`
	// This is the id provider type. Only for consoles.
	IdProvider *string `json:"idProvider,omitempty"`
	// External token to validate the user. Only for consoles.
	ExternalToken *string `json:"externalToken,omitempty"`
}

// NewCodeLinkConfirmationRequest instantiates a new CodeLinkConfirmationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCodeLinkConfirmationRequest() *CodeLinkConfirmationRequest {
	this := CodeLinkConfirmationRequest{}
	return &this
}

// NewCodeLinkConfirmationRequestWithDefaults instantiates a new CodeLinkConfirmationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCodeLinkConfirmationRequestWithDefaults() *CodeLinkConfirmationRequest {
	this := CodeLinkConfirmationRequest{}
	return &this
}

// GetSignInCode returns the SignInCode field value if set, zero value otherwise.
func (o *CodeLinkConfirmationRequest) GetSignInCode() string {
	if o == nil || IsNil(o.SignInCode) {
		var ret string
		return ret
	}
	return *o.SignInCode
}

// GetSignInCodeOk returns a tuple with the SignInCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CodeLinkConfirmationRequest) GetSignInCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SignInCode) {
		return nil, false
	}
	return o.SignInCode, true
}

// HasSignInCode returns a boolean if a field has been set.
func (o *CodeLinkConfirmationRequest) HasSignInCode() bool {
	if o != nil && !IsNil(o.SignInCode) {
		return true
	}

	return false
}

// SetSignInCode gets a reference to the given string and assigns it to the SignInCode field.
func (o *CodeLinkConfirmationRequest) SetSignInCode(v string) {
	o.SignInCode = &v
}

// GetSessionToken returns the SessionToken field value if set, zero value otherwise.
func (o *CodeLinkConfirmationRequest) GetSessionToken() string {
	if o == nil || IsNil(o.SessionToken) {
		var ret string
		return ret
	}
	return *o.SessionToken
}

// GetSessionTokenOk returns a tuple with the SessionToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CodeLinkConfirmationRequest) GetSessionTokenOk() (*string, bool) {
	if o == nil || IsNil(o.SessionToken) {
		return nil, false
	}
	return o.SessionToken, true
}

// HasSessionToken returns a boolean if a field has been set.
func (o *CodeLinkConfirmationRequest) HasSessionToken() bool {
	if o != nil && !IsNil(o.SessionToken) {
		return true
	}

	return false
}

// SetSessionToken gets a reference to the given string and assigns it to the SessionToken field.
func (o *CodeLinkConfirmationRequest) SetSessionToken(v string) {
	o.SessionToken = &v
}

// GetIdProvider returns the IdProvider field value if set, zero value otherwise.
func (o *CodeLinkConfirmationRequest) GetIdProvider() string {
	if o == nil || IsNil(o.IdProvider) {
		var ret string
		return ret
	}
	return *o.IdProvider
}

// GetIdProviderOk returns a tuple with the IdProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CodeLinkConfirmationRequest) GetIdProviderOk() (*string, bool) {
	if o == nil || IsNil(o.IdProvider) {
		return nil, false
	}
	return o.IdProvider, true
}

// HasIdProvider returns a boolean if a field has been set.
func (o *CodeLinkConfirmationRequest) HasIdProvider() bool {
	if o != nil && !IsNil(o.IdProvider) {
		return true
	}

	return false
}

// SetIdProvider gets a reference to the given string and assigns it to the IdProvider field.
func (o *CodeLinkConfirmationRequest) SetIdProvider(v string) {
	o.IdProvider = &v
}

// GetExternalToken returns the ExternalToken field value if set, zero value otherwise.
func (o *CodeLinkConfirmationRequest) GetExternalToken() string {
	if o == nil || IsNil(o.ExternalToken) {
		var ret string
		return ret
	}
	return *o.ExternalToken
}

// GetExternalTokenOk returns a tuple with the ExternalToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CodeLinkConfirmationRequest) GetExternalTokenOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalToken) {
		return nil, false
	}
	return o.ExternalToken, true
}

// HasExternalToken returns a boolean if a field has been set.
func (o *CodeLinkConfirmationRequest) HasExternalToken() bool {
	if o != nil && !IsNil(o.ExternalToken) {
		return true
	}

	return false
}

// SetExternalToken gets a reference to the given string and assigns it to the ExternalToken field.
func (o *CodeLinkConfirmationRequest) SetExternalToken(v string) {
	o.ExternalToken = &v
}

func (o CodeLinkConfirmationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CodeLinkConfirmationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SignInCode) {
		toSerialize["signInCode"] = o.SignInCode
	}
	if !IsNil(o.SessionToken) {
		toSerialize["sessionToken"] = o.SessionToken
	}
	if !IsNil(o.IdProvider) {
		toSerialize["idProvider"] = o.IdProvider
	}
	if !IsNil(o.ExternalToken) {
		toSerialize["externalToken"] = o.ExternalToken
	}
	return toSerialize, nil
}

type NullableCodeLinkConfirmationRequest struct {
	value *CodeLinkConfirmationRequest
	isSet bool
}

func (v NullableCodeLinkConfirmationRequest) Get() *CodeLinkConfirmationRequest {
	return v.value
}

func (v *NullableCodeLinkConfirmationRequest) Set(val *CodeLinkConfirmationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCodeLinkConfirmationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCodeLinkConfirmationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCodeLinkConfirmationRequest(val *CodeLinkConfirmationRequest) *NullableCodeLinkConfirmationRequest {
	return &NullableCodeLinkConfirmationRequest{value: val, isSet: true}
}

func (v NullableCodeLinkConfirmationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCodeLinkConfirmationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


