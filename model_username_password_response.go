/*
Player Authentication API

# Introduction This is the API specification for the Unity Authentication service that allows player authentication.  ## Rate Limits The API has rate limiting in place. The endpoints are limited to 15 requests per second on a per-IP basis, and 300 requests over 30 minutes. The API responds with a `429` HTTP status code if the rate limit is exceeded. It will also respond with a `Retry-After` header to be used in conjunction with a client's retry logic. The value is the number of seconds until a request for the given player will be accepted. 

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unityauth

import (
	"encoding/json"
)

// checks if the UsernamePasswordResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsernamePasswordResponse{}

// UsernamePasswordResponse Information about the username/password account.
type UsernamePasswordResponse struct {
	// The username. Case insensitive. Length must be between 3-20 with the allowed characters a-z, 0-9 and the symbols [.][-][@][_].
	Username *string `json:"username,omitempty"`
	// When the username/password account was created. It is a unix timestamp.
	CreatedAt *string `json:"createdAt,omitempty"`
	// When the username/password account last logged in. It is a unix timestamp.
	LastLoginAt *string `json:"lastLoginAt,omitempty"`
	// When the username/password account password was last updated. It is a unix timestamp.
	PasswordUpdatedAt *string `json:"passwordUpdatedAt,omitempty"`
}

// NewUsernamePasswordResponse instantiates a new UsernamePasswordResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsernamePasswordResponse() *UsernamePasswordResponse {
	this := UsernamePasswordResponse{}
	return &this
}

// NewUsernamePasswordResponseWithDefaults instantiates a new UsernamePasswordResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsernamePasswordResponseWithDefaults() *UsernamePasswordResponse {
	this := UsernamePasswordResponse{}
	return &this
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *UsernamePasswordResponse) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsernamePasswordResponse) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *UsernamePasswordResponse) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *UsernamePasswordResponse) SetUsername(v string) {
	o.Username = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *UsernamePasswordResponse) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsernamePasswordResponse) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *UsernamePasswordResponse) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *UsernamePasswordResponse) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetLastLoginAt returns the LastLoginAt field value if set, zero value otherwise.
func (o *UsernamePasswordResponse) GetLastLoginAt() string {
	if o == nil || IsNil(o.LastLoginAt) {
		var ret string
		return ret
	}
	return *o.LastLoginAt
}

// GetLastLoginAtOk returns a tuple with the LastLoginAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsernamePasswordResponse) GetLastLoginAtOk() (*string, bool) {
	if o == nil || IsNil(o.LastLoginAt) {
		return nil, false
	}
	return o.LastLoginAt, true
}

// HasLastLoginAt returns a boolean if a field has been set.
func (o *UsernamePasswordResponse) HasLastLoginAt() bool {
	if o != nil && !IsNil(o.LastLoginAt) {
		return true
	}

	return false
}

// SetLastLoginAt gets a reference to the given string and assigns it to the LastLoginAt field.
func (o *UsernamePasswordResponse) SetLastLoginAt(v string) {
	o.LastLoginAt = &v
}

// GetPasswordUpdatedAt returns the PasswordUpdatedAt field value if set, zero value otherwise.
func (o *UsernamePasswordResponse) GetPasswordUpdatedAt() string {
	if o == nil || IsNil(o.PasswordUpdatedAt) {
		var ret string
		return ret
	}
	return *o.PasswordUpdatedAt
}

// GetPasswordUpdatedAtOk returns a tuple with the PasswordUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsernamePasswordResponse) GetPasswordUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.PasswordUpdatedAt) {
		return nil, false
	}
	return o.PasswordUpdatedAt, true
}

// HasPasswordUpdatedAt returns a boolean if a field has been set.
func (o *UsernamePasswordResponse) HasPasswordUpdatedAt() bool {
	if o != nil && !IsNil(o.PasswordUpdatedAt) {
		return true
	}

	return false
}

// SetPasswordUpdatedAt gets a reference to the given string and assigns it to the PasswordUpdatedAt field.
func (o *UsernamePasswordResponse) SetPasswordUpdatedAt(v string) {
	o.PasswordUpdatedAt = &v
}

func (o UsernamePasswordResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsernamePasswordResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.LastLoginAt) {
		toSerialize["lastLoginAt"] = o.LastLoginAt
	}
	if !IsNil(o.PasswordUpdatedAt) {
		toSerialize["passwordUpdatedAt"] = o.PasswordUpdatedAt
	}
	return toSerialize, nil
}

type NullableUsernamePasswordResponse struct {
	value *UsernamePasswordResponse
	isSet bool
}

func (v NullableUsernamePasswordResponse) Get() *UsernamePasswordResponse {
	return v.value
}

func (v *NullableUsernamePasswordResponse) Set(val *UsernamePasswordResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUsernamePasswordResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUsernamePasswordResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsernamePasswordResponse(val *UsernamePasswordResponse) *NullableUsernamePasswordResponse {
	return &NullableUsernamePasswordResponse{value: val, isSet: true}
}

func (v NullableUsernamePasswordResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsernamePasswordResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


