/*
Player Authentication API

# Introduction This is the API specification for the Unity Authentication service that allows player authentication.  ## Rate Limits The API has rate limiting in place. The endpoints are limited to 15 requests per second on a per-IP basis, and 300 requests over 30 minutes. The API responds with a `429` HTTP status code if the rate limit is exceeded. It will also respond with a `Retry-After` header to be used in conjunction with a client's retry logic. The value is the number of seconds until a request for the given player will be accepted. 

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unityauth

import (
	"encoding/json"
)

// checks if the UnlinkExternalIdRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UnlinkExternalIdRequest{}

// UnlinkExternalIdRequest The request body for unlink external id.
type UnlinkExternalIdRequest struct {
	// The external Id to unlink from the player account.
	ExternalId *string `json:"externalId,omitempty"`
}

// NewUnlinkExternalIdRequest instantiates a new UnlinkExternalIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnlinkExternalIdRequest() *UnlinkExternalIdRequest {
	this := UnlinkExternalIdRequest{}
	return &this
}

// NewUnlinkExternalIdRequestWithDefaults instantiates a new UnlinkExternalIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnlinkExternalIdRequestWithDefaults() *UnlinkExternalIdRequest {
	this := UnlinkExternalIdRequest{}
	return &this
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *UnlinkExternalIdRequest) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnlinkExternalIdRequest) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *UnlinkExternalIdRequest) HasExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *UnlinkExternalIdRequest) SetExternalId(v string) {
	o.ExternalId = &v
}

func (o UnlinkExternalIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UnlinkExternalIdRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExternalId) {
		toSerialize["externalId"] = o.ExternalId
	}
	return toSerialize, nil
}

type NullableUnlinkExternalIdRequest struct {
	value *UnlinkExternalIdRequest
	isSet bool
}

func (v NullableUnlinkExternalIdRequest) Get() *UnlinkExternalIdRequest {
	return v.value
}

func (v *NullableUnlinkExternalIdRequest) Set(val *UnlinkExternalIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUnlinkExternalIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUnlinkExternalIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnlinkExternalIdRequest(val *UnlinkExternalIdRequest) *NullableUnlinkExternalIdRequest {
	return &NullableUnlinkExternalIdRequest{value: val, isSet: true}
}

func (v NullableUnlinkExternalIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnlinkExternalIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


