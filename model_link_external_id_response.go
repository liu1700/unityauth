/*
Player Authentication API

# Introduction This is the API specification for the Unity Authentication service that allows player authentication.  ## Rate Limits The API has rate limiting in place. The endpoints are limited to 15 requests per second on a per-IP basis, and 300 requests over 30 minutes. The API responds with a `429` HTTP status code if the rate limit is exceeded. It will also respond with a `Retry-After` header to be used in conjunction with a client's retry logic. The value is the number of seconds until a request for the given player will be accepted. 

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unityauth

import (
	"encoding/json"
)

// checks if the LinkExternalIdResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LinkExternalIdResponse{}

// LinkExternalIdResponse response for a link request
type LinkExternalIdResponse struct {
	// The number of seconds in which the Id token expires. By default it's 3600.
	ExpiresIn *int32 `json:"expiresIn,omitempty"`
	// The Id token of the authenticated player.
	IdToken *string `json:"idToken,omitempty"`
	// The session token of the authenticated player. This token can be used to sign-in the player again.
	SessionToken *string `json:"sessionToken,omitempty"`
	User *Player `json:"user,omitempty"`
	// The Id of the authenticated player. If a project is specified in the request, this field represents the Id of the project scoped player.
	UserId *string `json:"userId,omitempty"`
}

// NewLinkExternalIdResponse instantiates a new LinkExternalIdResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkExternalIdResponse() *LinkExternalIdResponse {
	this := LinkExternalIdResponse{}
	return &this
}

// NewLinkExternalIdResponseWithDefaults instantiates a new LinkExternalIdResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkExternalIdResponseWithDefaults() *LinkExternalIdResponse {
	this := LinkExternalIdResponse{}
	return &this
}

// GetExpiresIn returns the ExpiresIn field value if set, zero value otherwise.
func (o *LinkExternalIdResponse) GetExpiresIn() int32 {
	if o == nil || IsNil(o.ExpiresIn) {
		var ret int32
		return ret
	}
	return *o.ExpiresIn
}

// GetExpiresInOk returns a tuple with the ExpiresIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkExternalIdResponse) GetExpiresInOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpiresIn) {
		return nil, false
	}
	return o.ExpiresIn, true
}

// HasExpiresIn returns a boolean if a field has been set.
func (o *LinkExternalIdResponse) HasExpiresIn() bool {
	if o != nil && !IsNil(o.ExpiresIn) {
		return true
	}

	return false
}

// SetExpiresIn gets a reference to the given int32 and assigns it to the ExpiresIn field.
func (o *LinkExternalIdResponse) SetExpiresIn(v int32) {
	o.ExpiresIn = &v
}

// GetIdToken returns the IdToken field value if set, zero value otherwise.
func (o *LinkExternalIdResponse) GetIdToken() string {
	if o == nil || IsNil(o.IdToken) {
		var ret string
		return ret
	}
	return *o.IdToken
}

// GetIdTokenOk returns a tuple with the IdToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkExternalIdResponse) GetIdTokenOk() (*string, bool) {
	if o == nil || IsNil(o.IdToken) {
		return nil, false
	}
	return o.IdToken, true
}

// HasIdToken returns a boolean if a field has been set.
func (o *LinkExternalIdResponse) HasIdToken() bool {
	if o != nil && !IsNil(o.IdToken) {
		return true
	}

	return false
}

// SetIdToken gets a reference to the given string and assigns it to the IdToken field.
func (o *LinkExternalIdResponse) SetIdToken(v string) {
	o.IdToken = &v
}

// GetSessionToken returns the SessionToken field value if set, zero value otherwise.
func (o *LinkExternalIdResponse) GetSessionToken() string {
	if o == nil || IsNil(o.SessionToken) {
		var ret string
		return ret
	}
	return *o.SessionToken
}

// GetSessionTokenOk returns a tuple with the SessionToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkExternalIdResponse) GetSessionTokenOk() (*string, bool) {
	if o == nil || IsNil(o.SessionToken) {
		return nil, false
	}
	return o.SessionToken, true
}

// HasSessionToken returns a boolean if a field has been set.
func (o *LinkExternalIdResponse) HasSessionToken() bool {
	if o != nil && !IsNil(o.SessionToken) {
		return true
	}

	return false
}

// SetSessionToken gets a reference to the given string and assigns it to the SessionToken field.
func (o *LinkExternalIdResponse) SetSessionToken(v string) {
	o.SessionToken = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *LinkExternalIdResponse) GetUser() Player {
	if o == nil || IsNil(o.User) {
		var ret Player
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkExternalIdResponse) GetUserOk() (*Player, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *LinkExternalIdResponse) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given Player and assigns it to the User field.
func (o *LinkExternalIdResponse) SetUser(v Player) {
	o.User = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *LinkExternalIdResponse) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkExternalIdResponse) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *LinkExternalIdResponse) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *LinkExternalIdResponse) SetUserId(v string) {
	o.UserId = &v
}

func (o LinkExternalIdResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LinkExternalIdResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExpiresIn) {
		toSerialize["expiresIn"] = o.ExpiresIn
	}
	if !IsNil(o.IdToken) {
		toSerialize["idToken"] = o.IdToken
	}
	if !IsNil(o.SessionToken) {
		toSerialize["sessionToken"] = o.SessionToken
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	return toSerialize, nil
}

type NullableLinkExternalIdResponse struct {
	value *LinkExternalIdResponse
	isSet bool
}

func (v NullableLinkExternalIdResponse) Get() *LinkExternalIdResponse {
	return v.value
}

func (v *NullableLinkExternalIdResponse) Set(val *LinkExternalIdResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkExternalIdResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkExternalIdResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkExternalIdResponse(val *LinkExternalIdResponse) *NullableLinkExternalIdResponse {
	return &NullableLinkExternalIdResponse{value: val, isSet: true}
}

func (v NullableLinkExternalIdResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkExternalIdResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


