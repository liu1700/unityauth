/*
Player Authentication API

# Introduction This is the API specification for the Unity Authentication service that allows player authentication.  ## Rate Limits The API has rate limiting in place. The endpoints are limited to 15 requests per second on a per-IP basis, and 300 requests over 30 minutes. The API responds with a `429` HTTP status code if the rate limit is exceeded. It will also respond with a `Retry-After` header to be used in conjunction with a client's retry logic. The value is the number of seconds until a request for the given player will be accepted. 

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unityauth

import (
	"encoding/json"
)

// checks if the GenerateCodeResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenerateCodeResponse{}

// GenerateCodeResponse Response for code linking with information on the code.
type GenerateCodeResponse struct {
	// UUID identifying the code linking session.
	CodeLinkSessionId *string `json:"codeLinkSessionId,omitempty"`
	// The code required to perform the code confirmation.
	SignInCode *string `json:"signInCode,omitempty"`
	// The timestamp for when the code is no longer valid in unix time since epoch.
	Expiration *int32 `json:"expiration,omitempty"`
}

// NewGenerateCodeResponse instantiates a new GenerateCodeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenerateCodeResponse() *GenerateCodeResponse {
	this := GenerateCodeResponse{}
	return &this
}

// NewGenerateCodeResponseWithDefaults instantiates a new GenerateCodeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenerateCodeResponseWithDefaults() *GenerateCodeResponse {
	this := GenerateCodeResponse{}
	return &this
}

// GetCodeLinkSessionId returns the CodeLinkSessionId field value if set, zero value otherwise.
func (o *GenerateCodeResponse) GetCodeLinkSessionId() string {
	if o == nil || IsNil(o.CodeLinkSessionId) {
		var ret string
		return ret
	}
	return *o.CodeLinkSessionId
}

// GetCodeLinkSessionIdOk returns a tuple with the CodeLinkSessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateCodeResponse) GetCodeLinkSessionIdOk() (*string, bool) {
	if o == nil || IsNil(o.CodeLinkSessionId) {
		return nil, false
	}
	return o.CodeLinkSessionId, true
}

// HasCodeLinkSessionId returns a boolean if a field has been set.
func (o *GenerateCodeResponse) HasCodeLinkSessionId() bool {
	if o != nil && !IsNil(o.CodeLinkSessionId) {
		return true
	}

	return false
}

// SetCodeLinkSessionId gets a reference to the given string and assigns it to the CodeLinkSessionId field.
func (o *GenerateCodeResponse) SetCodeLinkSessionId(v string) {
	o.CodeLinkSessionId = &v
}

// GetSignInCode returns the SignInCode field value if set, zero value otherwise.
func (o *GenerateCodeResponse) GetSignInCode() string {
	if o == nil || IsNil(o.SignInCode) {
		var ret string
		return ret
	}
	return *o.SignInCode
}

// GetSignInCodeOk returns a tuple with the SignInCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateCodeResponse) GetSignInCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SignInCode) {
		return nil, false
	}
	return o.SignInCode, true
}

// HasSignInCode returns a boolean if a field has been set.
func (o *GenerateCodeResponse) HasSignInCode() bool {
	if o != nil && !IsNil(o.SignInCode) {
		return true
	}

	return false
}

// SetSignInCode gets a reference to the given string and assigns it to the SignInCode field.
func (o *GenerateCodeResponse) SetSignInCode(v string) {
	o.SignInCode = &v
}

// GetExpiration returns the Expiration field value if set, zero value otherwise.
func (o *GenerateCodeResponse) GetExpiration() int32 {
	if o == nil || IsNil(o.Expiration) {
		var ret int32
		return ret
	}
	return *o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateCodeResponse) GetExpirationOk() (*int32, bool) {
	if o == nil || IsNil(o.Expiration) {
		return nil, false
	}
	return o.Expiration, true
}

// HasExpiration returns a boolean if a field has been set.
func (o *GenerateCodeResponse) HasExpiration() bool {
	if o != nil && !IsNil(o.Expiration) {
		return true
	}

	return false
}

// SetExpiration gets a reference to the given int32 and assigns it to the Expiration field.
func (o *GenerateCodeResponse) SetExpiration(v int32) {
	o.Expiration = &v
}

func (o GenerateCodeResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenerateCodeResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CodeLinkSessionId) {
		toSerialize["codeLinkSessionId"] = o.CodeLinkSessionId
	}
	if !IsNil(o.SignInCode) {
		toSerialize["signInCode"] = o.SignInCode
	}
	if !IsNil(o.Expiration) {
		toSerialize["expiration"] = o.Expiration
	}
	return toSerialize, nil
}

type NullableGenerateCodeResponse struct {
	value *GenerateCodeResponse
	isSet bool
}

func (v NullableGenerateCodeResponse) Get() *GenerateCodeResponse {
	return v.value
}

func (v *NullableGenerateCodeResponse) Set(val *GenerateCodeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGenerateCodeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGenerateCodeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenerateCodeResponse(val *GenerateCodeResponse) *NullableGenerateCodeResponse {
	return &NullableGenerateCodeResponse{value: val, isSet: true}
}

func (v NullableGenerateCodeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenerateCodeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


