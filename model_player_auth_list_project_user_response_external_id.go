/*
Player Authentication Admin API

# Introduction This is the Admin API specification for the Unity Authentication service that allows player authentication. To use this API, you must first enable it through the Unity Gaming Services dashboard.  For more information about how to set up Service Account Authentication, please read here: https://services.docs.unity.com/docs/service-account-auth  ## Rate Limits The API has rate limiting in place. Request are limited to 10 requests per second, and 500 requests per 30 minute period.  The API responds with a `429` HTTP status code if the rate limit is exceeded.  It will also respond with a `Retry-After` header to be used in conjunction with a client's retry logic. The value is the number of seconds until a request for the given player will be accepted. 

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package unityauth

import (
	"encoding/json"
)

// checks if the PlayerAuthListProjectUserResponseExternalId type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlayerAuthListProjectUserResponseExternalId{}

// PlayerAuthListProjectUserResponseExternalId Represents a Player provided by an External Provider
type PlayerAuthListProjectUserResponseExternalId struct {
	// The provider Id within the Id domain that provided the link.
	ProviderId *string `json:"providerId,omitempty"`
}

// NewPlayerAuthListProjectUserResponseExternalId instantiates a new PlayerAuthListProjectUserResponseExternalId object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlayerAuthListProjectUserResponseExternalId() *PlayerAuthListProjectUserResponseExternalId {
	this := PlayerAuthListProjectUserResponseExternalId{}
	return &this
}

// NewPlayerAuthListProjectUserResponseExternalIdWithDefaults instantiates a new PlayerAuthListProjectUserResponseExternalId object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlayerAuthListProjectUserResponseExternalIdWithDefaults() *PlayerAuthListProjectUserResponseExternalId {
	this := PlayerAuthListProjectUserResponseExternalId{}
	return &this
}

// GetProviderId returns the ProviderId field value if set, zero value otherwise.
func (o *PlayerAuthListProjectUserResponseExternalId) GetProviderId() string {
	if o == nil || IsNil(o.ProviderId) {
		var ret string
		return ret
	}
	return *o.ProviderId
}

// GetProviderIdOk returns a tuple with the ProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayerAuthListProjectUserResponseExternalId) GetProviderIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderId) {
		return nil, false
	}
	return o.ProviderId, true
}

// HasProviderId returns a boolean if a field has been set.
func (o *PlayerAuthListProjectUserResponseExternalId) HasProviderId() bool {
	if o != nil && !IsNil(o.ProviderId) {
		return true
	}

	return false
}

// SetProviderId gets a reference to the given string and assigns it to the ProviderId field.
func (o *PlayerAuthListProjectUserResponseExternalId) SetProviderId(v string) {
	o.ProviderId = &v
}

func (o PlayerAuthListProjectUserResponseExternalId) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlayerAuthListProjectUserResponseExternalId) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProviderId) {
		toSerialize["providerId"] = o.ProviderId
	}
	return toSerialize, nil
}

type NullablePlayerAuthListProjectUserResponseExternalId struct {
	value *PlayerAuthListProjectUserResponseExternalId
	isSet bool
}

func (v NullablePlayerAuthListProjectUserResponseExternalId) Get() *PlayerAuthListProjectUserResponseExternalId {
	return v.value
}

func (v *NullablePlayerAuthListProjectUserResponseExternalId) Set(val *PlayerAuthListProjectUserResponseExternalId) {
	v.value = val
	v.isSet = true
}

func (v NullablePlayerAuthListProjectUserResponseExternalId) IsSet() bool {
	return v.isSet
}

func (v *NullablePlayerAuthListProjectUserResponseExternalId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlayerAuthListProjectUserResponseExternalId(val *PlayerAuthListProjectUserResponseExternalId) *NullablePlayerAuthListProjectUserResponseExternalId {
	return &NullablePlayerAuthListProjectUserResponseExternalId{value: val, isSet: true}
}

func (v NullablePlayerAuthListProjectUserResponseExternalId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlayerAuthListProjectUserResponseExternalId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


